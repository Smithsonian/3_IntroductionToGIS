tm_borders(col = 'green') + # Color of the borders
tm_shape(MMNR,
name = 'MMNR') +
tm_borders(col = 'green') +
# Add the Fences - MultiLines
tm_shape(Fences) +
tm_lines(lwd = 0.25, # Width of the lines
col = 'blue') + # COlor of the lines
# Add the Main Roads - MultiLines
tm_shape(Roads,
name = 'Roads') +
tm_lines(col = "type",
title.col = "Road Type") +
# Load the Towns - change the symbol
tm_shape(Towns) +
tm_dots(size = 0.01,
col = 'red') +
# Load the wildebeest data - Points
tm_shape(wb.pts.utm,
name = 'Wildebeest Points') + # The name will appear in the legend
tm_dots(col = "id", # COlor based on the id
palette = viridis::viridis(length(unique(wb.pts.utm$id))), # A color palette
size = 0.001, # Size of the points
legend.show = FALSE) +
# Load the wildebeest data - Lines
tm_shape(wb.lines,
name = "Wildebeest Lines") + # The name will appear in the legend
tm_lines(lwd = 0.25, # Controls the width of the lines
col = 'id', # Color based on the id
palette = viridis::viridis(length(unique(wb.lines$id))), # A color palette
legend.col.show = FALSE)
Mara_proj
Mara_proj <- tm_basemap(
c('OpenStreetMap',
'Esri.WorldTopoMap',
'Esri.WorldImagery')
) +
# Add the conservancy boundaries - Polygon
tm_shape(Mara_Cons,
name = 'Conservancies') + # Name included in the legend
tm_borders(col = 'green') + # Color of the borders
tm_shape(MMNR,
name = 'MMNR') +
tm_borders(col = 'green') +
# Add the Fences - MultiLines
tm_shape(Fences) +
tm_lines(lwd = 0.25, # Width of the lines
col = 'blue') + # COlor of the lines
# Add the Main Roads - MultiLines
tm_shape(Roads,
name = 'Roads') +
tm_lines(col = "type",
title.col = "Road Type") +
# Load the Towns - change the symbol
tm_shape(Towns) +
tm_dots(size = 0.01,
col = 'red')
Mara_proj
tmap_mode('plot')
# Add basemaps to display underneath data files
Mara_proj.plot <- tm_shape(Mara_Cons,
name = 'Conservancies') +
tm_borders(col = 'green') +
tm_shape(MMNR,
name = 'MMNR') +
tm_borders(col = 'green') +
# Add the Fences - MultiLines
tm_shape(Fences) +
tm_lines(lwd = 0.25, # Width of the lines
col = 'blue') + # COlor of the lines
# Add the Main Roads - MultiLines
tm_shape(Roads,
name = 'Roads') +
tm_lines(col = "type",
title.col = "Road Type") +
# Load the Towns - change the symbol
tm_shape(Towns) +
tm_dots(size = 0.01,
col = 'red') +
tm_compass(position = c("right", "top")) +
tm_scale_bar(position = c("right", "bottom")) +
tm_layout(legend.outside = T)
Mara_proj.plot
Mara_proj.plot <-
tm_shape(Mara_Cons,
name = 'Conservancies',
col = 'light green') +
tm_borders(col = 'dark green') +
tm_shape(MMNR,
name = 'MMNR') +
tm_borders(col = 'green') +
# Add the Fences - MultiLines
tm_shape(Fences) +
tm_lines(lwd = 0.25, # Width of the lines
col = 'blue') + # COlor of the lines
# Add the Main Roads - MultiLines
tm_shape(Roads,
name = 'Roads') +
tm_lines(col = "type",
title.col = "Road Type") +
# Load the Towns - change the symbol
tm_shape(Towns) +
tm_dots(size = 0.01,
col = 'red') +
tm_compass(position = c("right", "top")) +
tm_scale_bar(position = c("right", "bottom")) +
tm_layout(legend.outside = T)
Mara_proj.plot
head(Roads)
# Add basemaps to display underneath data files
Mara_proj.plot <-
tm_shape(Mara_Cons,
name = 'Conservancies') +
tm_borders(col = 'dark green') +
tm_fill(col = 'light green') +
tm_shape(MMNR) +
tm_borders(col = 'green') +
# Add the Fences - MultiLines
tm_shape(Fences) +
tm_lines(lwd = 0.25, # Width of the lines
col = 'blue') + # COlor of the lines
# Add the Main Roads - MultiLines
tm_shape(Roads) +
tm_lines(col = "type",
title.col = "Road Type") +
# Load the Towns - change the symbol
tm_shape(Towns) +
tm_dots(size = 0.01,
col = 'red') +
tm_compass(position = c("right", "top")) +
tm_scale_bar(position = c("right", "bottom")) +
tm_layout(legend.outside = T)
Mara_proj.plot
help(tm_borders)
# Add basemaps to display underneath data files
Mara_proj.plot <-
tm_shape(Mara_Cons,
name = 'Conservancies') +
tm_borders(col = 'dark green') +
tm_fill(col = 'green') +
tm_shape(MMNR) +
tm_borders(col = 'green') +
# Add the Fences - MultiLines
tm_shape(Fences) +
tm_lines(lwd = 0.25, # Width of the lines
col = 'blue') + # COlor of the lines
# Add the Main Roads - MultiLines
tm_shape(Roads) +
tm_lines(col = "type",
title.col = "Road Type") +
# Load the Towns - change the symbol
tm_shape(Towns) +
tm_dots(size = 0.01,
col = 'red') +
tm_compass(position = c("right", "top")) +
tm_scale_bar(position = c("right", "bottom")) +
tm_layout(legend.outside = T)
Mara_proj.plot
# Add basemaps to display underneath data files
Mara_proj.plot <-
tm_shape(Mara_Cons,
name = 'Conservancies') +
tm_borders(col = 'dark green') +
tm_fill(col = 'green') +
tm_shape(MMNR) +
tm_borders(col = 'green') +
# Add the Fences - MultiLines
tm_shape(Fences) +
tm_lines(lwd = 0.25, # Width of the lines
col = 'blue',
title.col = "Fences") + # COlor of the lines
# Add the Main Roads - MultiLines
tm_shape(Roads) +
tm_lines(col = "type",
title.col = "Road Type") +
# Load the Towns - change the symbol
tm_shape(Towns) +
tm_dots(size = 0.01,
col = 'red',
title.col = "Towns") +
tm_compass(position = c("right", "top")) +
tm_scale_bar(position = c("right", "bottom")) +
tm_layout(legend.outside = T)
Mara_proj.plot <-
tm_shape(Mara_Cons,
name = 'Conservancies') +
tm_borders(col = 'dark green') +
tm_fill(col = 'green') +
tm_shape(MMNR) +
tm_borders(col = 'green') +
# Add the Fences - MultiLines
tm_shape(Fences) +
tm_lines(lwd = 0.25,
col = 'blue',
title.col = "Fences")
Mara_proj.plot
Mara_proj.plot <-
tm_shape(Mara_Cons,
name = 'Conservancies') +
tm_borders(col = 'dark green') +
tm_fill(col = 'green') +
tm_shape(MMNR) +
tm_borders(col = 'green') +
# Add the Fences - MultiLines
tm_shape(Fences) +
tm_lines(lwd = 0.25,
col = 'blue',
title.col = "Fences") +
# Add the Main Roads - MultiLines
tm_shape(Roads) +
tm_lines(col = "type",
title.col = "Road Type") +
# Load the Towns - change the symbol
tm_shape(Towns) +
tm_dots(size = 0.01,
col = 'red',
title.col = "Towns") +
tm_compass(position = c("right", "top")) +
tm_scale_bar(position = c("right", "bottom")) +
tm_layout(legend.outside = T)
Mara_proj.plot <-
tm_shape(Mara_Cons,
name = 'Conservancies') +
tm_borders(col = 'dark green') +
tm_fill(col = 'green') +
tm_shape(MMNR) +
tm_borders(col = 'green') +
# Add the Fences - MultiLines
tm_shape(Fences) +
tm_lines(lwd = 0.25,
col = 'blue',
title.col = "Fences") +
# Add the Main Roads - MultiLines
tm_shape(Roads) +
tm_lines(col = "type",
title.col = "Road Type") +
# # Load the Towns - change the symbol
# tm_shape(Towns) +
#   tm_dots(size = 0.01,
#           col = 'red',
#           title.col = "Towns") +
tm_compass(position = c("right", "top")) +
tm_scale_bar(position = c("right", "bottom")) +
tm_layout(legend.outside = T)
Mara_proj.plot
help(ggplot)
str(Mara_Cons)
unique(Mara_Cons$short_name)
Nab_Cons <- Mara_Cons %>%
filter(short_name = "Naboisho Conservancy")
rlang::last_trace()
Nab_Cons <- Mara_Cons %>%
filter(short_name == "Naboisho Conservancy")
plot(Nab_Cons)
Nab_Cons
canvas<- rast(ext(Roads), crs=crs(Roads), resolution=50)
plot(canvas)
canvas
road.r<- rasterize(roads, canvas)
road.raster <- rasterize(Roads, canvas)
road.raster
plot(road.raster)
distance<- distance(road.raster)
plot(distance)
plot(Roads, add=T)
plot(distance)
plot(st_geometry(Roads), add=TRUE)
plot(Roads)
s, add=T)
plot(distance)
plot(Roads, add=TRUE)
plot(Bomas, add=TRUE)
canvas <- rast(ext(Mara_Cons), crs=crs(Roads), resolution=50)
# Create a road raster and then create a distance grid to the road center points
road.raster <- rasterize(Roads, canvas)
distance<- distance(road.raster)
road.raster
plot(road.raster)
plot(distance)
plot(Roads, add=TRUE)
plot(Bomas, add=TRUE)
plot(MMNR, add=TRUE)
plot(distance)
plot(Roads, add=TRUE)
plot(Bomas, add=TRUE)
plot(MMNR, border = 'red', add=TRUE)
plot(distance)
plot(Roads, add=TRUE)
plot(Bomas, add=TRUE)
View(MMNR)
plot(st_geometry(MMNR), border = 'green', add=TRUE)
# Plot the result
plot(distance)
plot(st_geometry(Roads), add=TRUE)
plot(distance)
plot(Roads, add=TRUE)
plot(Bomas, add=TRUE)
plot(st_geometry(MMNR), border = 'green', add=TRUE)
head(Mara_Cons)
help(set_units)
Big_Cons <- Mara_Cons %>%
mutate(acres = set_units(st_area(shape_Area),
"acre")) %>%
filter(acres > 2500)
help(set_units)
Big_Cons <- Mara_Cons %>%
mutate(acres = units::set_units(st_area(shape_Area),
"acre")) %>%
filter(acres > 2500)
Big_Cons <- Mara_Cons %>%
mutate(acres = units::set_units(st_area(Shape_Area),
"acre")) %>%
filter(acres > 2500)
Big_Cons <- Mara_Cons %>%
mutate(acres = units::set_units(st_area(Shape_Area),"acre"))
Big_Cons <- Mara_Cons %>%
mutate(area = st_area(Shape_Area))
help(st_area)
str(Mara_Cons)
Big_Cons <- Mara_Cons %>%
filter(Shape_Area > 2500)
nrow(Big_Cons)
nrow(Mara_Cons)
head(Mara_Cons)
Big_Cons <- Mara_Cons %>%
mutate(area = st_area(Shape_Area))
Big_Cons <- Mara_Cons %>%
dplyr::mutate(area = st_area(Shape_Area))
type(Mara_Cons)
Mara_Cons
Big_Cons <- Mara_Cons %>%
mutate(area = st_area(Mara_Cons))
head(Big_Cons)
Big_Cons <- Mara_Cons %>%
mutate(acres = units::set_units(st_area(Mara_Cons),"acre"))
Big_Cons
Big_Cons <- Mara_Cons %>%
mutate(acres = units::set_units(st_area(Mara_Cons),
"acre")) %>%
filter(acres > 50000)
str(Big_Cons)
Big_Cons <- Mara_Cons %>%
mutate(acres = units::set_units(st_area(Mara_Cons),
"acre")) %>%
filter(as.numeric(acres) > 50000)
nrow(Big_Cons)
"acre")) %>%
plot(Mara_Cons, axes=T, col = 'green')
plot(st_geometry(Mara_Cons), axes=T, col = 'green')
plot(st_geometry(Big_Cons), col = 'orange', add=T)
plot(st_geometry(Mara_Cons), border = 'dark green', col = 'light green', xlab = 'Easting', ylab = 'Northing', axes = TRUE)
plot(st_geometry(Fences), col = 'blue', add = TRUE) # Fences are a line file...we must use 'col' to color the lines
plot(st_geometry(Towns), col = 'red', cex = 0.5, pch = 17, add=TRUE)
plot(st_geometry(Mara_Cons), border = 'dark green', col = 'light green', xlab = 'Easting', ylab = 'Northing', axes = TRUE)
plot(st_geometry(MMNR), col = 'green', border = 'black', add=TRUE) # MMNR is a polygon
plot(st_geometry(MMNR), col = 'light green', border = 'dark green', add=TRUE) # MMNR is a polygon
plot(st_geometry(Towns), col = 'red', cex = 0.5, pch = 17, add=TRUE)
par(mfrow = c(1,2))
plot(st_geometry(Mara_Cons), border = 'dark green', col = 'light green', xlab = 'Easting', ylab = 'Northing', axes = TRUE)
plot(st_geometry(Fences), col = 'blue', add = TRUE) # Fences are a line file...we must use 'col' to color the lines
plot(st_geometry(Towns), col = 'red', cex = 0.5, pch = 17, add=TRUE)
plot(st_geometry(Mara_Cons), border = 'dark green', col = 'light green', xlab = 'Easting', ylab = 'Northing', axes = TRUE)
plot(st_geometry(MMNR), col = 'light green', border = 'dark green', add=TRUE) # MMNR is a polygon
plot(st_geometry(Towns), col = 'red', cex = 0.5, pch = 17, add=TRUE)
plot(st_geometry(Roads), col = 'black', add=TRUE)
par(mfrow = c(1,1))
Nab_Cons <- Mara_Cons %>%
filter(short_name == "Naboisho Conservancy")
Nab_Cons
summary(Nab_Cons)
Big_Cons <- Mara_Cons %>%
mutate(acres = units::set_units(st_area(Mara_Cons),
"acre")) %>%
filter(as.numeric(acres) > 50000)
Big_Cons
length(unique(Big_Cons$short_name))
unique(Big_Cons$short_name)
# What are there names?
unique(Big_Cons$short_name)
plot(st_geometry(Mara_Cons), axes=T, col = 'green')
# We could plot them if we wanted to
plot(st_geometry(Mara_Cons), axes=T)
plot(st_geometry(Mara_Cons), axes=T)
plot(st_geometry(Big_Cons), col = 'green', add=T)
help("rasterize")
help(distance)
plot(distance)
plot(Roads, add=TRUE)
plot(Bomas, add=TRUE, pch = 17)
plot(Roads, add=TRUE)
plot(Bomas, add=TRUE, pch = 15)
plot(distance) # Result is in meters
plot(Roads, add=TRUE)
plot(Bomas, add=TRUE, pch = 15, cex = 1, col = "red")
plot(Bomas)
plot(Bomas, pch=15, cex=1, col="red")
plot(distance) # Result is in meters
plot(Roads, add=TRUE)
plot(Bomas, add=TRUE, pch = 15, cex = 1, col = "red")
Bomas
dist.extract <- extract(distance, Bomas)
dist.extract <- terra::extract(distance, Bomas)
dist.extract
head(dist.extract)
birds.extract<- cbind(Bomas, dist.extract)
birds.extract
dist.extract
hist(dist.extract$layer)
#
summary(dist.extact$layer)
summary(dist.extact$layer)
summary(dist.extract$layer)
hist(dist.extract$layer)
# Create a tmap
tmap_mode('view')
# Add basemaps to display underneath data files
Mara_proj <- tm_basemap(
c('OpenStreetMap',
'Esri.WorldTopoMap',
'Esri.WorldImagery')
) +
# Add the conservancy boundaries - Polygon
tm_shape(Mara_Cons,
name = 'Conservancies') + # Name included in the legend
tm_borders(col = 'green') + # Color of the borders
tm_shape(MMNR,
name = 'MMNR') +
tm_borders(col = 'green') +
# Show Naboisho from the subset (filter) made above
tm_shape(Nab_Cons,
name = 'Naboisho') +
tm_borders(col = 'orange') +
# Add the Fences - MultiLines
tm_shape(Fences) +
tm_lines(lwd = 0.25, # Width of the lines
col = 'blue') + # COlor of the lines
# Add the Main Roads - MultiLines
tm_shape(Roads,
name = 'Roads') +
tm_lines(col = "type",
title.col = "Road Type") +
# Load the Towns - change the symbol
tm_shape(Towns) +
tm_dots(size = 0.01,
col = 'red') +
# Load the wildebeest data - Points
tm_shape(wb.pts.utm,
name = 'Wildebeest Points') + # The name will appear in the legend
tm_dots(col = "id", # COlor based on the id
palette = viridis::viridis(length(unique(wb.pts.utm$id))), # A color palette
size = 0.001, # Size of the points
legend.show = FALSE) +
# Load the wildebeest data - Lines
tm_shape(wb.lines,
name = "Wildebeest Lines") + # The name will appear in the legend
tm_lines(lwd = 0.25, # Controls the width of the lines
col = 'id', # Color based on the id
palette = viridis::viridis(length(unique(wb.lines$id))), # A color palette
legend.col.show = FALSE)
# Show the map
Mara_proj
tmap_mode('view')
# Add basemaps to display underneath data files
Mara_proj <- tm_basemap(
c('OpenStreetMap',
'Esri.WorldTopoMap',
'Esri.WorldImagery')
) +
# Add the conservancy boundaries - Polygon
tm_shape(Mara_Cons,
name = 'Conservancies') + # Name included in the legend
tm_borders(col = 'green') + # Color of the borders
tm_shape(MMNR,
name = 'MMNR') +
tm_borders(col = 'green') +
# Show Naboisho from the subset (filter) made above
tm_shape(Nab_Cons,
name = 'Naboisho') +
tm_borders(col = 'orange') +
# Add the Fences - MultiLines
tm_shape(Fences) +
tm_lines(lwd = 0.25, # Width of the lines
col = 'blue') + # COlor of the lines
# Add the Main Roads - MultiLines
tm_shape(Roads,
name = 'Roads') +
tm_lines(col = "type",
title.col = "Road Type") +
# Load the Towns - change the symbol
tm_shape(Towns) +
tm_dots(size = 0.01,
col = 'red') +
# Load the wildebeest data - Points
tm_shape(wb.pts.utm,
name = 'Wildebeest Points') + # The name will appear in the legend
tm_dots(col = "id", # COlor based on the id
palette = viridis::viridis(length(unique(wb.pts.utm$id))), # A color palette
size = 0.001, # Size of the points
legend.show = FALSE) +
# Load the wildebeest data - Lines
tm_shape(wb.lines,
name = "Wildebeest Lines") + # The name will appear in the legend
tm_lines(lwd = 0.25, # Controls the width of the lines
col = 'id', # Color based on the id
palette = viridis::viridis(length(unique(wb.lines$id))), # A color palette
legend.col.show = FALSE)
Mara_proj
help(tm_borders)
# extract R code
library(knitr)
file.exists("IntroductionToGIS.Rmd")
purl("IntroductionToGIS.Rmd")
